{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nimport { ethers } from 'ethers';\nconst [errorMessage, setErrorMessage] = useState(null);\nconst [defaultAccount, setDefaultAccount] = useState(null);\nconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n\nconst Share = () => {\n  // Connect to wallet \n  const connectWalletHandler = () => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(result => {\n        accountChangedHandler(result[0]);\n        setConnButtonText('Wallet Connected');\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    } else {\n      console.log('Need to install MetaMask');\n      setErrorMessage('Please install MetaMask browser extension to interact');\n    }\n  }; // important to update account if we have, will cause component re-render\n\n\n  const accountChangedHandler = newAccount => {\n    setDefaultAccount(newAccount);\n  };\n\n  const chainChangedHandler = () => {\n    // reload the page to avoid any errors with chain change mid use of application\n    window.location.reload();\n  }; // listen for account changes\n\n\n  window.ethereum.on('accountsChanged', accountChangedHandler);\n  window.ethereum.on('chainChanged', chainChangedHandler);\n};\n\n_c = Share;\nexport { Share, defaultAccount };\n\nvar _c;\n\n$RefreshReg$(_c, \"Share\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ethers","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","Share","connectWalletHandler","window","ethereum","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAccount","chainChangedHandler","location","reload","on"],"sources":["/home/anas/Downloads/open-react-template/src/wallet.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n \nimport {ethers} from 'ethers'\n  \n  const [errorMessage, setErrorMessage] = useState(null);\n   const [ defaultAccount, setDefaultAccount] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n \n\t\n const Share = ()=>{\n\n    // Connect to wallet \n        const connectWalletHandler = () => {\n      if (window.ethereum) {\n\n        window.ethereum.request({ method: 'eth_requestAccounts'})\n        .then(result => {\n          accountChangedHandler(result[0]);\n          setConnButtonText('Wallet Connected');\n        })\n        .catch(error => {\n          setErrorMessage(error.message);\n        \n        });\n\n      } else {\n        console.log('Need to install MetaMask');\n        setErrorMessage('Please install MetaMask browser extension to interact');\n      }\n    }\n    // important to update account if we have, will cause component re-render\n     const accountChangedHandler = (newAccount) => {\n        setDefaultAccount(newAccount); \n    }\n\n    const chainChangedHandler = () => {\n      // reload the page to avoid any errors with chain change mid use of application\n      window.location.reload();\n    }\n    // listen for account changes\n    window.ethereum.on('accountsChanged', accountChangedHandler);\n    window.ethereum.on('chainChanged', chainChangedHandler);\n   \n \n}\n \nexport    {Share,defaultAccount};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAEA,SAAQC,MAAR,QAAqB,QAArB;AAEE,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD;AACC,MAAM,CAAEM,cAAF,EAAkBC,iBAAlB,IAAuCP,QAAQ,CAAC,IAAD,CAArD;AACF,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,gBAAD,CAApD;;AAGA,MAAMU,KAAK,GAAG,MAAI;EAEf;EACI,MAAMC,oBAAoB,GAAG,MAAM;IACrC,IAAIC,MAAM,CAACC,QAAX,EAAqB;MAEnBD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;QAAEC,MAAM,EAAE;MAAV,CAAxB,EACCC,IADD,CACMC,MAAM,IAAI;QACdC,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;QACAR,iBAAiB,CAAC,kBAAD,CAAjB;MACD,CAJD,EAKCU,KALD,CAKOC,KAAK,IAAI;QACdf,eAAe,CAACe,KAAK,CAACC,OAAP,CAAf;MAED,CARD;IAUD,CAZD,MAYO;MACLC,OAAO,CAACC,GAAR,CAAY,0BAAZ;MACAlB,eAAe,CAAC,uDAAD,CAAf;IACD;EACF,CAjBG,CAHW,CAqBf;;;EACC,MAAMa,qBAAqB,GAAIM,UAAD,IAAgB;IAC3CjB,iBAAiB,CAACiB,UAAD,CAAjB;EACH,CAFA;;EAID,MAAMC,mBAAmB,GAAG,MAAM;IAChC;IACAb,MAAM,CAACc,QAAP,CAAgBC,MAAhB;EACD,CAHD,CA1Be,CA8Bf;;;EACAf,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,iBAAnB,EAAsCV,qBAAtC;EACAN,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,cAAnB,EAAmCH,mBAAnC;AAGH,CAnCA;;KAAMf,K;AAqCP,SAAWA,KAAX,EAAiBJ,cAAjB"},"metadata":{},"sourceType":"module"}