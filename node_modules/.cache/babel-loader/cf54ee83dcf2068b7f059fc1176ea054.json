{"ast":null,"code":"import React, { useState, useRef, useEffect } from 'react';\nconst [errorMessage, setErrorMessage] = useState(null);\nconst [defaultAccount, setDefaultAccount] = useState(null);\nconst [connButtonText, setConnButtonText] = useState('Connect Wallet'); // Connect to wallet \n\nconst connectWalletHandler = () => {\n  if (window.ethereum) {\n    window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }).then(result => {\n      accountChangedHandler(result[0]);\n      setConnButtonText('Wallet Connected');\n    }).catch(error => {\n      setErrorMessage(error.message);\n    });\n  } else {\n    console.log('Need to install MetaMask');\n    setErrorMessage('Please install MetaMask browser extension to interact');\n  }\n}; // important to update account if we have, will cause component re-render\n\n\nconst accountChangedHandler = newAccount => {\n  setDefaultAccount(newAccount);\n};\n\nconst chainChangedHandler = () => {\n  // reload the page to avoid any errors with chain change mid use of application\n  window.location.reload();\n}; // listen for account changes\n\n\nwindow.ethereum.on('accountsChanged', accountChangedHandler);\nwindow.ethereum.on('chainChanged', chainChangedHandler);\nexport { defaultAccount };","map":{"version":3,"names":["React","useState","useRef","useEffect","errorMessage","setErrorMessage","defaultAccount","setDefaultAccount","connButtonText","setConnButtonText","connectWalletHandler","window","ethereum","request","method","then","result","accountChangedHandler","catch","error","message","console","log","newAccount","chainChangedHandler","location","reload","on"],"sources":["/home/anas/Downloads/open-react-template/src/wallet.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n  \n \n  const [errorMessage, setErrorMessage] = useState(null);\n   const [ defaultAccount, setDefaultAccount] = useState(null);\n\tconst [connButtonText, setConnButtonText] = useState('Connect Wallet');\n \n    // Connect to wallet \n        const connectWalletHandler = () => {\n      if (window.ethereum) {\n\n        window.ethereum.request({ method: 'eth_requestAccounts'})\n        .then(result => {\n          accountChangedHandler(result[0]);\n          setConnButtonText('Wallet Connected');\n        })\n        .catch(error => {\n          setErrorMessage(error.message);\n        \n        });\n\n      } else {\n        console.log('Need to install MetaMask');\n        setErrorMessage('Please install MetaMask browser extension to interact');\n      }\n    }\n    // important to update account if we have, will cause component re-render\n     const accountChangedHandler = (newAccount) => {\n        setDefaultAccount(newAccount); \n    }\n\n    const chainChangedHandler = () => {\n      // reload the page to avoid any errors with chain change mid use of application\n      window.location.reload();\n    }\n    // listen for account changes\n    window.ethereum.on('accountsChanged', accountChangedHandler);\n    window.ethereum.on('chainChanged', chainChangedHandler);\n   \n \n \n \nexport  {defaultAccount};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AAGE,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,IAAD,CAAhD;AACC,MAAM,CAAEK,cAAF,EAAkBC,iBAAlB,IAAuCN,QAAQ,CAAC,IAAD,CAArD;AACF,MAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,gBAAD,CAApD,C,CAEG;;AACI,MAAMS,oBAAoB,GAAG,MAAM;EACrC,IAAIC,MAAM,CAACC,QAAX,EAAqB;IAEnBD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;MAAEC,MAAM,EAAE;IAAV,CAAxB,EACCC,IADD,CACMC,MAAM,IAAI;MACdC,qBAAqB,CAACD,MAAM,CAAC,CAAD,CAAP,CAArB;MACAP,iBAAiB,CAAC,kBAAD,CAAjB;IACD,CAJD,EAKCS,KALD,CAKOC,KAAK,IAAI;MACdd,eAAe,CAACc,KAAK,CAACC,OAAP,CAAf;IAED,CARD;EAUD,CAZD,MAYO;IACLC,OAAO,CAACC,GAAR,CAAY,0BAAZ;IACAjB,eAAe,CAAC,uDAAD,CAAf;EACD;AACF,CAjBG,C,CAkBJ;;;AACC,MAAMY,qBAAqB,GAAIM,UAAD,IAAgB;EAC3ChB,iBAAiB,CAACgB,UAAD,CAAjB;AACH,CAFA;;AAID,MAAMC,mBAAmB,GAAG,MAAM;EAChC;EACAb,MAAM,CAACc,QAAP,CAAgBC,MAAhB;AACD,CAHD,C,CAIA;;;AACAf,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,iBAAnB,EAAsCV,qBAAtC;AACAN,MAAM,CAACC,QAAP,CAAgBe,EAAhB,CAAmB,cAAnB,EAAmCH,mBAAnC;AAKJ,SAASlB,cAAT"},"metadata":{},"sourceType":"module"}